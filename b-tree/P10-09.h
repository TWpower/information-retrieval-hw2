/* ================= BTree_Delete ==================== 	Delete entry with key target from B-Tree	   Pre    tree must be initialized. Null tree OK	          dltKey is pointer to key to be deleted	   Post   Node entry deleted & data space freed 	          -or- An error code is returned 	   Return Success (true) or Not found (false)*/bool BTree_Delete (BTREE* tree, void* dltKey){//	Local Definitions 	bool  success;	NODE* dltPtr;//	Statements 	if (!tree->root)	    return false;		_delete (tree, 	         tree->root, 	         dltKey, 	        &success);	    	if (success)	   {	    (tree->count)--;	    if (tree->root->numEntries == 0)	       {	        dltPtr     = tree->root;	        tree->root = tree->root->firstPtr;	        free (dltPtr);	       } // root empty 	   } // success 	return success;}  // BTree_Delete 